namespace: immich

pvc:
  name: immich-library
  size: 256Gi

storageClass:
  name: local-retain
  reclaimPolicy: Retain
  volumeBindingMode: WaitForFirstConsumer

immich:
  image:
    tag: v1.132.3
  immich:
    persistence:
      library:
        enabled: true
        # Chart doesn't currently support dynamic PVCs, hence we've created our own pvc
        # https://github.com/immich-app/immich-charts/blob/main/charts/immich/values.yaml
        existingClaim: immich-library
  server:
    enabled: true
    metrics:
      enabled: true
  machine-learning:
    enabled: true
  redis:
    enabled: true
  typesense:
    enabled: true
  
  env:
    DB_HOSTNAME: postgresql
    DB_DATABASE_NAME: immich
    DB_USERNAME: immich
    DB_PASSWORD: TODO

# Immich requires a PostgreSQL database with pgvecto-rs installed
# Sadly we have to maintain our own PostgreSQL deployment for now
# The bitnami postgresql chart does not support pgvecto-rs easily
postgresql:
  image: 
    repository: tensorchord/pgvecto-rs
    tag: pg17-v0.0.0-nightly.20250227
    pullPolicy: IfNotPresent

  postgresql:
    database: immich
    user: immich
    password: TODO
    dataChecksum: "--data-checksums"

  persistence:
    size: 8Gi

  service:
    type: ClusterIP
    port: 5432

# Redis deployment for Immich
redis:
  image:
    repository: redis
    tag: 7.2-alpine
    pullPolicy: IfNotPresent

  persistence:
    size: 1Gi

  service:
    type: ClusterIP
    port: 6379

  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 200m

# cloudflare-tunnel:
#   cloudflare:
#     # Your Cloudflare account number.
#     account: "TODO"
#     # The name of the tunnel this instance will serve
#     tunnelName: "TODO"
#     # The ID of the above tunnel.
#     tunnelId: "TODO"
#     # The secret for the tunnel.
#     secret: "TODO"
#     # If defined, no secret is created for the credentials, and instead, the secret referenced is used
#     secretName: null
#     # Define ingress rules for the tunnel. See
#     # https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/configuration/configuration-file/ingress
#     ingress: []
#       # The first rule proxies traffic to the httpbin sample service named web-server at port 80
#       # - hostname: tunnel.example.com
#       #  service: http://web-service:80
#       # This rule sends traffic to the built-in hello-world HTTP server. This can help debug connectivity
#       # issues. If hello.example.com resolves and tunnel.example.com does not, then the problem is
#       # in the connection from cloudflared to your local service, not from the internet to cloudflared.
#       # - hostname: hello.example.com
#       #   service: hello_world
